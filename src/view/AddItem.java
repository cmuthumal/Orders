/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.BrandController;
import controller.CustomerController;
import controller.ItemTypeController;
import controller.JobController;
import extra.Extra;
import extra.LengthRestrictedDocument;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import model.Brand;
import model.Customer;
import model.ItemType;
import model.Job;
import orders.Orders;

/**
 *
 * @author CM <2222cm@gmail.com>
 */
public class AddItem extends javax.swing.JFrame {

    private CustomerController customerController;
    private ItemTypeController itemTypeController;
    private BrandController brandController;
    private SimpleDateFormat dateFormat;
    private ArrayList<Customer> custList = null;
    private ArrayList<ItemType> itemTypeList = null;
    private ArrayList<Brand> brandList = null;
    private String[] custArray, itemTypesArray, brandsArray;
    int id;
    private String noteNo;
    private int customerID;
    private String date;
    private int itemTypeID;
    private int brandID;
    private String model;
    private String serialNo;
    private int times;
    private String errorDesc;
    private String notes;
    private boolean dateSet = false, noteNoSet = false, modelSet = false, errorSet = false;

    /**
     * Creates new form AddItem
     */
    public AddItem() {
        initComponents();
        setLocationRelativeTo(null);
        dateFormat = new SimpleDateFormat("yyyy-MM-dd");

        customerController = new CustomerController();
        itemTypeController = new ItemTypeController();
        brandController = new BrandController();

        noteNumberTextField.setDocument(new LengthRestrictedDocument(255));
        modelTextField.setDocument(new LengthRestrictedDocument(255));
        serialNumberTextField.setDocument(new LengthRestrictedDocument(255));
        errorTextField.setDocument(new LengthRestrictedDocument(255));
        notesTextArea.setDocument(new LengthRestrictedDocument(255));

        clearFields();
        setFields();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        contentPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        noteNumberTextField = new javax.swing.JTextField();
        modelTextField = new javax.swing.JTextField();
        serialNumberTextField = new javax.swing.JTextField();
        errorTextField = new javax.swing.JTextField();
        addCustomerButton = new javax.swing.JButton();
        addItemTypeButton = new javax.swing.JButton();
        notesScrollPane = new javax.swing.JScrollPane();
        notesTextArea = new javax.swing.JTextArea();
        dateChooser = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        timesTextField = new javax.swing.JTextField();
        customerCombo = new javax.swing.JComboBox<>();
        itemTypeCombo = new javax.swing.JComboBox<>();
        brandCombo = new javax.swing.JComboBox<>();
        addBrandButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Item");
        setResizable(false);

        contentPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(200, 200, 200), 1, true));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Note Number");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Customer");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Date");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Item Type");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Brand");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Model");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Serial Number");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Error");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Notes");

        noteNumberTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        noteNumberTextField.setToolTipText("");
        noteNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noteNumberTextFieldActionPerformed(evt);
            }
        });

        modelTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        modelTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modelTextFieldActionPerformed(evt);
            }
        });

        serialNumberTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        serialNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serialNumberTextFieldActionPerformed(evt);
            }
        });

        errorTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        errorTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                errorTextFieldActionPerformed(evt);
            }
        });

        addCustomerButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addCustomerButton.setText("+");
        addCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerButtonActionPerformed(evt);
            }
        });

        addItemTypeButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addItemTypeButton.setText("+");
        addItemTypeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemTypeButtonActionPerformed(evt);
            }
        });

        notesTextArea.setColumns(20);
        notesTextArea.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        notesTextArea.setRows(5);
        notesScrollPane.setViewportView(notesTextArea);

        dateChooser.setDateFormatString("yyyy-MM-dd");
        dateChooser.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Times");

        timesTextField.setEditable(false);
        timesTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        timesTextField.setText("0");
        timesTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timesTextFieldActionPerformed(evt);
            }
        });

        customerCombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        customerCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerComboActionPerformed(evt);
            }
        });
        customerCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                customerComboKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                customerComboKeyTyped(evt);
            }
        });

        itemTypeCombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        itemTypeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemTypeComboActionPerformed(evt);
            }
        });

        brandCombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        addBrandButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addBrandButton.setText("+");
        addBrandButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBrandButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout contentPanelLayout = new javax.swing.GroupLayout(contentPanel);
        contentPanel.setLayout(contentPanelLayout);
        contentPanelLayout.setHorizontalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(contentPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(noteNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contentPanelLayout.createSequentialGroup()
                        .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(modelTextField)
                            .addComponent(serialNumberTextField)
                            .addComponent(errorTextField)
                            .addComponent(notesScrollPane)
                            .addComponent(dateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(timesTextField)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contentPanelLayout.createSequentialGroup()
                                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(brandCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(customerCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(itemTypeCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(addCustomerButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(addItemTypeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(addBrandButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        contentPanelLayout.setVerticalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(noteNumberTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(contentPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addCustomerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addItemTypeButton, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(itemTypeCombo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(brandCombo)
                    .addComponent(addBrandButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(modelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(serialNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(timesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(errorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(notesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        saveButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        saveButton.setText("Save");
        saveButton.setMaximumSize(new java.awt.Dimension(150, 50));
        saveButton.setMinimumSize(new java.awt.Dimension(100, 30));
        saveButton.setPreferredSize(new java.awt.Dimension(100, 30));
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        clearButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(contentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        noteNo = noteNumberTextField.getText();
        customerID = customerCombo.getSelectedIndex() + 1;
        itemTypeID = itemTypeCombo.getSelectedIndex() + 1;
        Date d = dateChooser.getDate();
        brandID = brandCombo.getSelectedIndex() + 1;
        model = modelTextField.getText();
        serialNo = serialNumberTextField.getText();
        times = Integer.parseInt(timesTextField.getText()) + 1;
        errorDesc = errorTextField.getText();
        notes = notesTextArea.getText();

        try {
            date = dateFormat.format(d);
            dateSet = new Extra().validateDate(date);
        } catch (NullPointerException e) {
            dateSet = false;
        }
        if (!noteNo.equals("") && (new Extra().validateText(noteNo))) {
            noteNoSet = true;
        }
        if (!model.equals("") && (new Extra().validateText(model))) {
            modelSet = true;
        }
        if (!errorDesc.equals("") && (new Extra().validateText(errorDesc))) {
            errorSet = true;
        }

        if (dateSet && noteNoSet && modelSet && errorSet) {
            Job job = new Job(id, noteNo, customerID, date, itemTypeID, brandID, model, serialNo, times, errorDesc, notes);
            boolean added = false;

            try {
                added = new JobController().addJob(job);

                if (added) {
                    JOptionPane.showMessageDialog(rootPane, "Item added.", "Done", 1);
                    clearFields();
                    setFields();
                }
            } catch (SQLException ex) {
                Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (!dateSet) {
            JOptionPane.showMessageDialog(rootPane, "Enter date.", "Error", 1);
        } else if (!noteNoSet) {
            JOptionPane.showMessageDialog(rootPane, "Enter note number.", "Error", 1);
        } else if (!modelSet) {
            JOptionPane.showMessageDialog(rootPane, "Enter item model", "Error", 1);
        } else if (!errorSet) {
            JOptionPane.showMessageDialog(rootPane, "Enter the error", "Error", 1);
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        clearFields();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void noteNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noteNumberTextFieldActionPerformed
        customerCombo.requestFocus();
    }//GEN-LAST:event_noteNumberTextFieldActionPerformed

    private void modelTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modelTextFieldActionPerformed
        serialNumberTextField.requestFocus();
    }//GEN-LAST:event_modelTextFieldActionPerformed

    private void serialNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serialNumberTextFieldActionPerformed
        setNumberOfTimes(serialNumberTextField.getText());
        errorTextField.requestFocus();
    }//GEN-LAST:event_serialNumberTextFieldActionPerformed

    private void errorTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_errorTextFieldActionPerformed
        notesTextArea.requestFocus();
    }//GEN-LAST:event_errorTextFieldActionPerformed

    private void addCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerButtonActionPerformed
        new AddCustomer(this, true).setVisible(true);
        setAllCustomersToCombo();
        customerCombo.setSelectedIndex(custList.size() - 1);
    }//GEN-LAST:event_addCustomerButtonActionPerformed

    private void addItemTypeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemTypeButtonActionPerformed
        new AddItemType(this, true).setVisible(true);
        setAllItemTypesToCombo();
        itemTypeCombo.setSelectedIndex(itemTypeList.size() - 1);
    }//GEN-LAST:event_addItemTypeButtonActionPerformed

    private void timesTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timesTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timesTextFieldActionPerformed

    private void customerComboKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customerComboKeyReleased
        System.out.println("customerComboKeyReleased");
        // TODO add your handling code here:
    }//GEN-LAST:event_customerComboKeyReleased

    private void customerComboKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customerComboKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_customerComboKeyTyped

    private void customerComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerComboActionPerformed
//        String customerSearchKey = (String) customerCombo.getEditor().getItem();
//        if (!customerSearchKey.equals("")) {
//            searchCustomers(customerSearchKey);
//        } else {
//            setAllCustomersToCombo();
//        }
    }//GEN-LAST:event_customerComboActionPerformed

    private void itemTypeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemTypeComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemTypeComboActionPerformed

    private void addBrandButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBrandButtonActionPerformed
        new AddBrand(this, true).setVisible(true);
        setAllBrandsToCombo();
        brandCombo.setSelectedIndex(brandList.size() - 1);
    }//GEN-LAST:event_addBrandButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddItem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBrandButton;
    private javax.swing.JButton addCustomerButton;
    private javax.swing.JButton addItemTypeButton;
    private javax.swing.JComboBox<String> brandCombo;
    private javax.swing.JButton clearButton;
    private javax.swing.JPanel contentPanel;
    private javax.swing.JComboBox<String> customerCombo;
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JTextField errorTextField;
    private javax.swing.JComboBox<String> itemTypeCombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField modelTextField;
    private javax.swing.JTextField noteNumberTextField;
    private javax.swing.JScrollPane notesScrollPane;
    private javax.swing.JTextArea notesTextArea;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField serialNumberTextField;
    private javax.swing.JTextField timesTextField;
    // End of variables declaration//GEN-END:variables

    private void clearFields() {
        noteNumberTextField.setText("");
        modelTextField.setText("");
        serialNumberTextField.setText("");
        timesTextField.setText("0");
        errorTextField.setText("");
        notesTextArea.setText("");
    }

    private void setFields() {
        try {
            id = new JobController().getNextID();
        } catch (SQLException ex) {
            Logger.getLogger(Orders.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Orders.class.getName()).log(Level.SEVERE, null, ex);
        }

        setAllCustomersToCombo();
        setAllItemTypesToCombo();
        setAllBrandsToCombo();
        dateChooser.setDate(new Date());
        new Extra().setCalendar(dateChooser.getJCalendar());
    }

    private void setAllCustomersToCombo() {
        try {
            custList = customerController.getAllCustomers();
        } catch (SQLException ex) {
            Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
        }
        setCustomerCombo();
    }

    private void setAllItemTypesToCombo() {
        try {
            itemTypeList = itemTypeController.getAllItemTypes();
        } catch (SQLException ex) {
            Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
        }
        setItemTypesCombo();
    }

    private void setAllBrandsToCombo() {
        try {
            brandList = brandController.getAllBrands();
        } catch (SQLException ex) {
            Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
        }
        setBrandCombo();
    }

    private void setCustomerCombo() {
        if (!custList.isEmpty()) {
            custArray = new String[custList.size()];
            for (int i = 0; i < custList.size(); i++) {
                Customer c = custList.get(i);
                custArray[i] = c.getName();
            }
        } else {
            custArray = new String[1];
            custArray[0] = "-No matching results-";
        }
        customerCombo.setModel(new DefaultComboBoxModel(custArray));
    }

    private void setItemTypesCombo() {
        if (!itemTypeList.isEmpty()) {
            itemTypesArray = new String[itemTypeList.size()];
            for (int i = 0; i < itemTypeList.size(); i++) {
                ItemType itemType = itemTypeList.get(i);
                itemTypesArray[i] = itemType.getItemType();
            }
        } else {
            itemTypesArray = new String[1];
            itemTypesArray[0] = "-No matching results-";
        }
        itemTypeCombo.setModel(new DefaultComboBoxModel(itemTypesArray));
    }

    private void setBrandCombo() {
        if (!brandList.isEmpty()) {
            brandsArray = new String[brandList.size()];
            for (int i = 0; i < brandList.size(); i++) {
                Brand br = brandList.get(i);
                brandsArray[i] = br.getBrand();
            }
        } else {
            brandsArray = new String[1];
            brandsArray[0] = "-No matching results-";
        }
        brandCombo.setModel(new DefaultComboBoxModel(brandsArray));
    }

    private void setNumberOfTimes(String serialNo) {
        try {
            int times = new JobController().getTimes(serialNo);
            timesTextField.setText(times + "");
        } catch (SQLException ex) {
            Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void searchCustomers(String key) {
        try {
            custList = customerController.searchCustomer(key);
        } catch (SQLException ex) {
            Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println("printing searched cusList:");
        for (int i = 0; i < custList.size(); i++) {
            System.out.println(custList.get(i).getName());
        }
        setCustomerCombo();
    }
}
